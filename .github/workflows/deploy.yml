name: Deploy Docs

on:
  push:
    branches:
      - main # 触发条件：当main分支有push事件时
    paths: # 仅当docs目录下的文件被修改时触发
      - 'apps/docs/**'
    # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest # 使用Ubuntu环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # 设置Node.js版本
          cache: false

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        working-directory: ./apps/docs
        run: npm ci

      - name: Build with VitePress
        working-directory: ./apps/docs
        run: npm run docs:build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/docs/.vitepress/dist # 指定构建输出目录

  # 部署工作
  deploy:
    needs: build # 依赖build job
    runs-on: ubuntu-latest # 添加运行环境

    environment:
      name: docs-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
